{"version":3,"sources":["API.js","icms/HeaderComponent.js","icms/ListIssues.js","icms/GenesisComponent.js","App.js","index.js"],"names":["DB","axios","create","baseURL","responseType","get","then","content","data","HeaderComponent","props","_this","Object","classCallCheck","this","_super","call","state","nm","_this2","react_default","a","createElement","data-uk-sticky","className","data-uk-navbar","onClick","window","location","reload","style","height","src","alt","data-uk-toggle","data-uk-navbar-toggle-icon","setState","night","uk-icon","Component","ListIssues","issues","all_issues","asc_sort_order","pageSize","selectedIssue","lastVisitedIssue","updatePageNumber","bind","assertThisInitialized","selectIssue","updateIssuesList","updated_props","projectName","project","_this3","project_issues","activePage","_this4","so","totalPages","length","paginationNum","_loop","i","push","key","data-uk-grid","map","ei","getRowFromIssue","href","data-uk-pagination-previous","e","data-uk-pagination-next","paddingTop","issueId","issue_summary","arguments","undefined","each_issue","displayDate","Date","parseInt","updated_on","toLocaleString","timeZone","is_warning_issue","score","incident_id","data-uk-scrollspy","getIconForEntityType","entity_type","entity_id","status","summary","color","data-uk-icon","name","_ref","pg","slice","GenesisComponent","projectList","setTimeout","projects","_this$state","HeaderComponent_HeaderComponent","_nm","id","data-uk-offcanvas","p","visible","setProject","ListIssues_ListIssues","App","showICMS","openICMS","GenesisComponent_GenesisComponent","rootElement","document","getElementById","ReactDOM","render","StrictMode","App_App"],"mappings":"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","file":"static/js/main.bfb230c9.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport let DB = {};\naxios\n    .create({\n        baseURL: \"https://raw.githubusercontent.com/MrL1605/demo/master/\",\n        responseType: \"json\"\n    })\n    .get(\"/large-db-v3.json\")\n    .then(content => {\n        DB = content.data;\n    });\n\n// https://raw.githubusercontent.com/MrL1605/demo/master/db.json\n// https://raw.githubusercontent.com/MrL1605/demo/master/large-db.json\n// https://raw.githubusercontent.com/MrL1605/demo/master/large-db-v3.json\n","import React, {Component} from \"react\";\n\nexport default class HeaderComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {nm: false};\n    }\n\n    render() {\n        const toggleNightMode = () => {\n            this.setState({nm: !this.state.nm}, () => {\n                this.props.night(this.state.nm);\n            });\n        };\n        const {nm} = this.state;\n\n        return (\n            <div data-uk-sticky=\"sel-target: .uk-navbar-container\">\n                <div className=\"uk-navbar-container\" data-uk-navbar={true}>\n                    <div className=\"uk-navbar-left\">\n                        <a className=\"uk-navbar-item uk-logo\" onClick={() => window.location.reload()}>\n                            <img style={{height: \"58px\"}}\n                                 src=\"https://github.com/MrL1605/demo/raw/master/assets/clari5_logo.png\"\n                                 alt=\"Clari5 Logo\"/>\n                        </a>\n                        <a className=\"uk-navbar-toggle\" data-uk-toggle=\"target: #projects-off-canvas-slide\">\n                            <span data-uk-navbar-toggle-icon={true} />\n                            <span className=\"uk-margin-small-left\">Projects</span>\n                        </a>\n                    </div>\n                    <div className=\"uk-navbar-right\">\n                        <div className=\"uk-navbar-item\">\n                            <a className=\"uk-button\" onClick={toggleNightMode}>\n                                <span uk-icon=\"icon: star\"/>\n                                <span>{nm ? \"Dark\" : \"Light\"}</span>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, {Component} from \"react\";\nimport {DB} from \"../API\";\n\nexport default class ListIssues extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            issues: [],\n            all_issues: [],\n            asc_sort_order: true,\n            pageSize: 20,\n            selectedIssue: \"\",\n            lastVisitedIssue: \"\"\n        };\n        this.updatePageNumber = this.updatePageNumber.bind(this);\n        this.selectIssue = this.selectIssue.bind(this);\n    }\n\n    componentDidMount() {\n        this.updateIssuesList();\n    }\n\n    componentWillReceiveProps(updated_props) {\n        if (this.state.projectName !== updated_props.project) {\n            this.setState(\n                {selectedIssue: \"\", projectName: updated_props.project},\n                () => {\n                    this.updateIssuesList();\n                }\n            );\n        }\n    }\n\n    updateIssuesList() {\n        let project_issues = DB.issues[this.props.project];\n        if (project_issues) {\n            this.setState({projectName: this.props.project, all_issues: project_issues}, () => {\n                this.updatePageNumber({activePage: 1});\n            });\n        } else {\n            this.setState({projectName: this.props.project, all_issues: []}, () => {\n                this.updatePageNumber({activePage: 1});\n            });\n        }\n    }\n\n    render() {\n        const so = this.state.asc_sort_order ? \"ascending\" : \"descending\";\n        const totalPages = this.state.all_issues.length / this.state.pageSize;\n        const selectedIssue = this.state.selectedIssue;\n        let toggleSort = () => {\n            this.setState({asc_sort_order: !this.state.asc_sort_order});\n        };\n        /*\n                if (selectedIssue)\n                    return (\n                        <DetailsComponent\n                            goBack={() => this.selectIssue(\"\")}\n                            issueId={selectedIssue}\n                            project={this.props.project}\n                            issue_summary={this.state.issue_summary}\n                            nm={this.props.nm}\n                        />\n                    );\n        */\n        let paginationNum = [];\n        for (let i = 0; i < totalPages; i++) {\n            paginationNum.push(<li key={i} onClick={() => this.updatePageNumber({activePage: i + 1})}> {i + 1}</li>);\n        }\n\n        return (\n            <div className=\"uk-container\">\n                <div data-uk-grid={true}>\n\n                    <div className=\"uk-width-3-4\">\n                        <table className=\"uk-table uk-table-responsive uk-table-divider uk-table-hover\">\n                            <thead>\n                            <tr>\n                                <th>Incident Id</th>\n                                <th>Entity Type</th>\n                                <th>Entity Id</th>\n                                <th className={\"sorted \" + so} onClick={toggleSort}>\n                                    Updated On\n                                </th>\n                                <th>Status</th>\n                                <th>Score</th>\n                                <th>Summary</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            {this.state.issues.map(ei => this.getRowFromIssue(ei))}\n                            </tbody>\n                        </table>\n                        <ul className=\"uk-pagination uk-flex-center\">\n                            <li><a href=\"#\"><span data-uk-pagination-previous={true}/></a></li>\n                            {paginationNum.map(e => e)}\n                            <li>\n                            </li>\n                            <li><a href=\"#\"><span data-uk-pagination-next={true}/></a></li>\n                        </ul>\n                    </div>\n                    <div className=\"uk-width-1-4\" style={{paddingTop: \"50px\"}}>\n                        <div className=\"uk-card uk-card-secondary uk-card-body\"\n                             data-uk-sticky=\"offset: 80\">\n                            <h3 className=\"uk-card-title\">Project Filters</h3>\n                            <dl>\n                                <dt>Project:</dt>\n                                <dd>{this.state.projectName}</dd>\n                                <dt>Score:</dt>\n                                <dd> > 200</dd>\n                                <dt>Priority</dt>\n                                <dd> > Severe</dd>\n                            </dl>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    selectIssue(issueId, issue_summary = {}) {\n        if (!issueId) this.setState({selectedIssue: issueId, issue_summary: {}});\n        else\n            this.setState({\n                selectedIssue: issueId,\n                issue_summary: issue_summary,\n                lastVisitedIssue: issueId\n            });\n    }\n\n    getRowFromIssue(each_issue) {\n        const displayDate = new Date(\n            parseInt(each_issue.updated_on)\n        ).toLocaleString(\"en-IN\", {timeZone: \"UTC\"});\n        const is_warning_issue = parseInt(each_issue.score) >= 700;\n        const is_last_visited =\n            this.state.lastVisitedIssue === each_issue.incident_id;\n\n        return (\n            <tr data-uk-scrollspy=\"cls:uk-animation-fade; repeat: true\">\n                <td>\n                    <span className=\"uk-label\"> {each_issue.incident_id} </span>\n                </td>\n                <td>\n                    {this.getIconForEntityType(each_issue.entity_type)}\n                </td>\n                <td>{each_issue.entity_id}</td>\n                <td> {displayDate} </td>\n                <td>{each_issue.status}</td>\n                <td>\n                    {is_warning_issue && <span uk-icon=\"heart\"/>}\n                    {each_issue.score}\n                </td>\n                <td>{each_issue.summary}</td>\n            </tr>\n        );\n    }\n\n    getIconForEntityType(entity_type) {\n        if (entity_type === \"Account\") {\n            return (\n                <span color={this.props.nm ? \"black\" : \"default\"}>\n                    <span data-uk-icon=\"folder\"/> {entity_type}\n                </span>\n            );\n        } else if (entity_type === \"Customer\") {\n            return (\n                <span  color={this.props.nm ? \"black\" : \"default\"}>\n                    <span name=\"users\"/>\n                    {entity_type}\n                </span>\n            );\n        } else if (entity_type === \"Employee\") {\n            return (\n                <span color={this.props.nm ? \"black\" : \"default\"}>\n                    <span name=\"suitcase\"/>\n                    {entity_type}\n                </span>\n            );\n        } else if (entity_type === \"Branch\") {\n            return (\n                <span color={this.props.nm ? \"black\" : \"default\"}>\n                    <span name=\"code branch\"/>\n                    {entity_type}\n                </span>\n            );\n        }\n    }\n\n    updatePageNumber({activePage}) {\n        let pg = this.state.pageSize;\n        let slice = this.state.all_issues.slice(\n            pg * (activePage - 1),\n            pg * activePage\n        );\n        this.setState({issues: slice});\n    }\n}\n","import React, {Component} from \"react\";\nimport {DB} from \"../API\";\nimport HeaderComponent from \"./HeaderComponent\";\nimport ListIssues from \"./ListIssues\";\n\nexport default class GenesisComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            project: \"\",\n            projectList: [],\n            nm: false\n        };\n    }\n\n    componentDidMount() {\n        setTimeout(() => {\n            let projects = DB.projects;\n            if (projects)\n                this.setState({projectList: projects, project: projects[0]});\n        }, 1000);\n    }\n\n    render() {\n        const setProject = p => {\n            if (p) this.setState({project: p, visible: false});\n            else this.setState({visible: false});\n        };\n        const {nm, projectList, project} = this.state;\n        const darkClasses = \"\";\n\n        return (\n            <div>\n                <HeaderComponent night={_nm => this.setState({nm: _nm})}/>\n                <div id=\"projects-off-canvas-slide\" data-uk-offcanvas={true}>\n                    <div className=\"uk-offcanvas-bar\">\n                        <ul className=\"uk-nav uk-nav-default\">\n                            <li className=\"uk-nav-header\">Projects</li>\n                            {projectList.length && (\n                                projectList.map(p =>\n                                    <li key={p} onClick={() => setProject(p)}>\n                                        <a className={darkClasses + (p === project ? \" uk-active\" : \"\")}>\n                                            {p}\n                                        </a>\n                                    </li>\n                                )\n                            ) || <li> Loading... </li>}\n                        </ul>\n                    </div>\n                </div>\n                <div className=\"\">\n                    <div className=\"\">\n                        {(project\n                            && <ListIssues project={project} nm={nm}/>)\n                        || <div className=\"has-text-grey-light\"> Loading... </div>}\n                    </div>\n                </div>\n            </div>\n        );\n\n        {/*\n<ul class=\"uk-nav\">\n    <li class=\"uk-parent\">\n        <a href=\"\"></a>\n        <ul class=\"uk-nav-sub\">\n            <li><a href=\"\"></a></li>\n            <li>\n                <a href=\"\"></a>\n                <ul>...</ul>\n            </li>\n        </ul>\n    </li>\n</ul>\n                <Segment\n                    basic\n                    inverted={this.state.nm}\n                    style={{position: \"absolute\", width: \"100%\", marginBottom: \"0\"}}\n                >\n                    <div style={{marginTop: \"65px\"}}/>\n                    {(project && <ListIssues project={project} nm={this.state.nm}/>) ||\n                    this.getPlaceHolders()}\n                </Segment>\n*/\n        }\n\n        {/*\n                <div style={{position: \"fixed\"}}>\n                    <Popup\n                        content=\"Project List\"\n                        position=\"bottom left\"\n                        trigger={\n                            <Button\n                                size=\"big\"\n                                color={this.state.nm ? \"white\" : \"black\"}\n                                floated=\"left\"\n                                attached=\"right\"\n                                style={{marginTop: \"100px\", zIndex: 20}}\n                                onClick={() => updateSideBarState(true)}\n                                data-content=\"Project List\"\n                            >\n                                <Icon name=\"content\"/>\n                            </Button>\n                        }\n                    />\n                </div>\n*/\n        }\n\n        {/*                <Sidebar.Pushable\n                    as={Segment}\n                    style={{\n                        marginTop: \"0\",\n                        background: \"none\",\n                        border: 0,\n                        height: removeSidebar ? \"0\" : \"100%\",\n                        width: removeSidebar ? \"0\" : \"100%\",\n                        position: \"absolute\"\n                    }}\n                >\n                    {projectList.length && (\n                        <Sidebar\n                            as={Menu}\n                            animation=\"overlay\"\n                            icon=\"labeled\"\n                            inverted\n                            onHidden={() => removeSideNow()}\n                            vertical\n                            visible={visible}\n                            width=\"thin\"\n                        >\n                            <div style={{marginTop: \"50px\"}}/>\n                            <Menu.Item as=\"a\" onClick={() => setProject(\"\")}>\n                                <Icon name=\"search\"/>\n                                Search\n                            </Menu.Item>\n                            {projectList.map(p => (\n                                <Menu.Item key={p} as=\"a\" onClick={() => setProject(p)}>\n                                    {p}\n                                </Menu.Item>\n                            ))}\n                            <Menu.Item as=\"a\" onClick={() => setProject(\"\")}>\n                                <Icon name=\"arrow left\"/>\n                                Go Back\n                            </Menu.Item>\n                        </Sidebar>\n                    )}\n                </Sidebar.Pushable>\n                <HeaderComponent night={_nm => this.setState({nm: _nm})}/>*/\n        }\n        // </div>\n        // );\n    }\n\n    /*\n        getPlaceHolders() {\n            return (\n                <Container>\n                    <Segment\n                        basic\n                        padded=\"very\"\n                        style={{height: \"100vh\", zIndex: 10}}\n                        inverted={this.state.nm}\n                    >\n                        <Placeholder style={{margin: \"30px 0 0 20%\"}}>\n                            <Placeholder.Header image>\n                                <Placeholder.Line/>\n                                <Placeholder.Line/>\n                            </Placeholder.Header>\n                            <Placeholder.Paragraph>\n                                <Placeholder.Line/>\n                                <Placeholder.Line/>\n                                <Placeholder.Line/>\n                                <Placeholder.Line/>\n                            </Placeholder.Paragraph>\n                            <Placeholder.Line/>\n                            <Placeholder.Header>\n                                <Placeholder.Line/>\n                                <Placeholder.Line/>\n                            </Placeholder.Header>\n                            <Placeholder.Paragraph>\n                                <Placeholder.Line/>\n                                <Placeholder.Line/>\n                                <Placeholder.Line/>\n                                <Placeholder.Line/>\n                            </Placeholder.Paragraph>\n                            <Placeholder.Header>\n                                <Placeholder.Line/>\n                                <Placeholder.Line/>\n                            </Placeholder.Header>\n                            <Placeholder.Paragraph>\n                                <Placeholder.Line/>\n                                <Placeholder.Line/>\n                                <Placeholder.Line/>\n                                <Placeholder.Line/>\n                            </Placeholder.Paragraph>\n                            <Placeholder.Header>\n                                <Placeholder.Line/>\n                                <Placeholder.Line/>\n                            </Placeholder.Header>\n                            <Placeholder.Paragraph>\n                                <Placeholder.Line/>\n                                <Placeholder.Line/>\n                                <Placeholder.Line/>\n                                <Placeholder.Line/>\n                            </Placeholder.Paragraph>\n                        </Placeholder>\n                    </Segment>\n                </Container>\n            );\n        }\n    */\n}\n","import React, {Component} from \"react\";\nimport \"./styles.css\";\nimport GenesisComponent from \"./icms/GenesisComponent\";\n\nexport default class App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            visible: true,\n            showICMS: false\n        };\n        this.openICMS = this.openICMS.bind(this);\n    }\n\n    openICMS() {\n        this.setState({showICMS: true});\n    }\n\n    render() {\n        if (this.state.showICMS) {\n            return <GenesisComponent/>;\n        }\n\n        return (\n            <div className=\"App\">\n                <h1 className=\"uk-heading-medium\">ICMS</h1>\n                <h2 className=\"uk-heading-small\">Code Name: Uranium</h2>\n                <h3>Let's see what this CSS framework has for you</h3>\n                <button className=\"uk-button\" onClick={this.openICMS}>Open ICMS</button>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport '../node_modules/uikit/dist/css/uikit.min.css';\nimport '../node_modules/uikit/dist/js/uikit.min';\nimport '../node_modules/uikit/dist/js/uikit-icons.min';\n\nimport App from \"./App\";\n\n// TODO: Switch to https://github.com/palmerhq/the-platform#stylesheet when it will be stable\n// const styleLink = document.createElement(\"link\");\n// styleLink.rel = \"stylesheet\";\n// styleLink.href = \"https://cdn.jsdelivr.net/npm/uikit@3.5.3/dist/css/uikit.min.css\";\n// document.head.appendChild(styleLink);\n// const scriptLink = document.createElement(\"script\");\n// scriptLink.src = \"https://cdn.jsdelivr.net/npm/uikit@3.5.3/dist/js/uikit.min.js\";\n// document.head.appendChild(scriptLink);\n// const iconsScriptLink = document.createElement(\"script\");\n// iconsScriptLink.src = \"https://cdn.jsdelivr.net/npm/uikit@3.5.3/dist/js/uikit-icons.min.js\";\n// document.head.appendChild(iconsScriptLink);\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    rootElement\n);\n"],"sourceRoot":""}