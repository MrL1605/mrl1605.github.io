{"version":3,"sources":["API.js","icms/HeaderComponent.js","icms/details/CaseDetails.js","icms/DetailsComponent.js","icms/ListIssues.js","App.js","icms/GenesisComponent.js","index.js"],"names":["DB","axios","create","baseURL","responseType","get","then","content","data","HeaderComponent","Component","constructor","props","super","this","state","nm","styleInd","render","availableStyles","availableStylesNames","darkStyles","toggleStyle","ind","setState","_this$state","react_default","a","createElement","map","style","key","href","rel","className","paddingTop","paddingBottom","onClick","window","location","reload","src","height","alt","id","role","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","name","CaseDetails","showTabs","case","incident","popupContent","componentDidMount","setTimeout","issue_details","issueId","sT","iDetails","iSummary","issue_summary","toggleTabActive","tabName","updateST","confirmPopup","downloadButtonLoading","downloadButtonState","case_id","case_entity_id","getIconForEntityType","case_assignee_id","case_status","getPlaceHolder","type","data-target","concat","entity_type","entity_id","score","getIconForPriority","priority","tabIndex","aria-hidden","data-dismiss","aria-label","width","p","getIconForFraud","_if","DetailsComponent","contextRef","React","createRef","activity","commentDetails","issue_comments","goBack","project","aria-current","CaseDetails_CaseDetails","ListIssues","issues","all_issues","asc_sort_order","pageSize","selectedIssue","lastVisitedIssue","updatePageNumber","bind","selectIssue","updateIssuesList","componentWillReceiveProps","updated_props","projectName","project_issues","so","totalPages","length","activePage","paginationNum","i","push","DetailsComponent_DetailsComponent","ei","getRowFromIssue","e","each_issue","displayDate","Date","parseInt","toLocaleString","timeZone","is_warning_issue","is_last_visited","tableClasses","classes","table-active","disabled","status","table-warning","Object","entries","filter","value","join","pg","slice","GenesisComponent","projectList","projects","setProject","visible","marginTop","ListIssues_ListIssues","HeaderComponent_HeaderComponent","night","_nm","App","showICMS","openICMS","GenesisComponent_GenesisComponent","_i","_arr","scriptUrl","scriptEle","document","head","appendChild","fontAwesomeDep","rootElement","getElementById","ReactDOM","StrictMode","App_App"],"mappings":"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","file":"static/js/main.a198672a.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport let DB = {};\naxios\n    .create({\n        baseURL: \"https://raw.githubusercontent.com/MrL1605/demo/master/\",\n        responseType: \"json\"\n    })\n    .get(\"/large-db-v3.json\")\n    .then(content => {\n        DB = content.data;\n    });\n\n// https://raw.githubusercontent.com/MrL1605/demo/master/db.json\n// https://raw.githubusercontent.com/MrL1605/demo/master/large-db.json\n// https://raw.githubusercontent.com/MrL1605/demo/master/large-db-v3.json\n","import React, {Component} from \"react\";\n\nexport default class HeaderComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {nm: false, styleInd: 0};\n    }\n\n    render() {\n        const availableStyles = [\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\",\n            \"https://bootswatch.com/4/materia/bootstrap.min.css\",\n            \"https://bootswatch.com/4/darkly/bootstrap.min.css\",\n            \"https://bootswatch.com/4/slate/bootstrap.min.css\",\n            \"https://bootswatch.com/4/superhero/bootstrap.min.css\"\n        ];\n        const availableStylesNames = [\"Default\", \"Materia\", \"Darkly\", \"Slate\", \"SuperHero\"];\n        const darkStyles = [false, false, true, true, false];\n        const toggleNightMode = () => {\n            this.setState({nm: !this.state.nm}, () => {\n                this.props.night(this.state.nm);\n            });\n        };\n        const toggleStyle = (ind) => {\n            this.setState({styleInd: ind});\n        };\n        const {styleInd, nm} = this.state;\n\n        return (\n            <div>\n                {availableStyles.map((style, ind) =>\n                    <link key={ind} href={availableStyles[styleInd]}\n                          rel={styleInd === ind ? \"stylesheet\" : \"stylesheet alt\"}/>\n                )}\n                <nav className=\"navbar navbar-expand-md navbar-light bg-light fixed-top\"\n                    // Override as diff styles make this larger and smaller\n                     style={{paddingTop: \"0.1rem\", paddingBottom: \"0.1rem\"}}>\n                    <a className=\"navbar-brand\" onClick={() => window.location.reload()}>\n                        <img src=\"https://github.com/MrL1605/demo/raw/master/assets/clari5_logo.png\"\n                             style={{height: \"58px\"}} alt=\"Clari5 Logo\"/>\n                    </a>\n                    <ul className=\"nav navbar-nav ml-auto\">\n                        <li className=\"nav-item dropdown\">\n                            <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navBarThemeDropdown\" role=\"button\"\n                               data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                {availableStylesNames[styleInd]} Theme\n                            </a>\n                            <div className=\"dropdown-menu\" aria-labelledby=\"navBarThemeDropdown\">\n                                {availableStylesNames.map((name, ind) =>\n                                    <a className=\"dropdown-item\" href=\"#\" key={name}\n                                       onClick={() => toggleStyle(ind)}>\n                                        <i className={\"fas mr-1 \" + (darkStyles[ind] ? \"fa-moon\" : \"fa-sun\")}/>\n                                        {name}\n                                    </a>\n                                )}\n                            </div>\n                        </li>\n                    </ul>\n                </nav>\n            </div>\n        );\n    }\n}\n","import React, {Component} from \"react\";\nimport {DB} from \"../../API\";\n\nexport default class CaseDetails extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showTabs: {\n                case: true,\n                incident: true\n            },\n            popupContent: \"\"\n        };\n    }\n\n    componentDidMount() {\n        setTimeout(() => {\n            if (DB.issue_details) {\n                this.setState({issue_details: DB.issue_details[this.props.issueId]});\n            }\n        }, 2000);\n    }\n\n    render() {\n        const sT = this.state.showTabs;\n        const iDetails = this.state.issue_details;\n        const iSummary = this.props.issue_summary;\n        const toggleTabActive = tabName => {\n            let updateST = sT;\n            updateST[tabName] = !updateST[tabName];\n            this.setState({showTabs: updateST});\n        };\n        const confirmPopup = content => {\n            this.setState({popupContent: content});\n        };\n        const downloadButtonLoading = () => {\n            this.setState({downloadButtonState: 1});\n            setTimeout(() => {\n                this.setState({downloadButtonState: 0});\n            }, 2000);\n        };\n\n        return (\n            <div>\n                <ul className=\"nav nav-tabs\">\n                    <li className=\"nav-item\">\n                        <a className=\"nav-link active\" href=\"#\" onClick={() => toggleTabActive(\"case\")}>\n                            <h5>\n                                Case Details\n                                <i className={\"fas ml-1 fa-caret-\" + (sT[\"case\"] ? \"down\" : \"right\")}/>\n                            </h5>\n                        </a>\n                    </li>\n                </ul>\n                {sT[\"case\"] && (\n                    <div>\n                        {(iDetails && (\n                            <div className='row'>\n                                <div className=\"col-7\">\n                                    <table className=\"table table-hover\">\n                                        <tbody>\n                                        <tr>\n                                            <th>Case Id</th>\n                                            <td>{iDetails.case_id}</td>\n                                        </tr>\n                                        <tr>\n                                            <th>Case Entity Id</th>\n                                            <td>{iDetails.case_entity_id}</td>\n                                        </tr>\n                                        <tr>\n                                            <th>Case Entity Type</th>\n                                            <td>\n                                                {this.getIconForEntityType(\n                                                    iDetails[\"case_entity_type\"]\n                                                )}\n                                            </td>\n                                        </tr>\n                                        </tbody>\n                                    </table>\n                                    <br/>\n                                </div>\n                                <div className=\"col-5\">\n                                    <table className=\"table table-hover\">\n                                        <tbody>\n                                        <tr>\n                                            <th>Assignee Id</th>\n                                            <td>{iDetails.case_assignee_id}</td>\n                                        </tr>\n                                        <tr>\n                                            <th>Status</th>\n                                            <td>{iDetails.case_status}</td>\n                                        </tr>\n                                        <tr>\n                                            <th>Resolution</th>\n                                            <td> -</td>\n                                        </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </div>\n                        )) ||\n                        this.getPlaceHolder()}\n                    </div>\n                )}\n                <ul className=\"nav nav-tabs\">\n                    <li className=\"nav-item\">\n                        <a className=\"nav-link active\" href=\"#\" onClick={() => toggleTabActive(\"incident\")}>\n                            <h5>\n                                Incident Details\n                                <i className={\"fas ml-1 fa-caret-\" + (sT[\"incident\"] ? \"down\" : \"right\")}/>\n                            </h5>\n                        </a>\n                    </li>\n                </ul>\n                <div>\n                    <table className=\"table table-hover\">\n                        <tr>\n                            <th>\n                                Actions\n                            </th>\n                            <td>\n                                <div className=\"form-inline\">\n                                    <button type=\"button\" className=\"btn btn-primary ml-2\"\n                                            onClick={() => downloadButtonLoading()}>\n                                        {(this.state.downloadButtonState === 1 && (\n                                            <div className=\"spinner-grow\" role=\"status\">\n                                                <span className=\"sr-only\">Loading...</span>\n                                            </div>\n                                        )) || (\n                                            <span>\n                                                <i className={\"fas mr-1 fa-cloud-download-alt\"}/>\n                                            </span>\n                                        )}\n                                    </button>\n                                    <button type=\"button\" className=\"btn btn-secondary ml-2\" data-toggle=\"modal\"\n                                            data-target=\"#confirmModal\"\n                                            onClick={() => confirmPopup(`Confirm to assign [${iDetails[\"case_id\"]}]`)}>\n                                        <i className={\"fas mr-1 fa-angle-double-right\"}/>\n                                        Assign Incident\n                                    </button>\n                                    <button type=\"button\" className=\"btn btn-light ml-2\" data-toggle=\"modal\"\n                                            data-target=\"#confirmModal\"\n                                            onClick={() => confirmPopup(`Confirm to close [${iDetails[\"case_id\"]}] case`)}>\n                                        <i className={\"fas mr-1 fa-archive\"}/>\n                                        Close Incident\n                                    </button>\n                                </div>\n                            </td>\n                        </tr>\n                    </table>\n                </div>\n                {sT[\"incident\"] && (\n                    <div>\n                        {(iDetails && (\n                            <div className=\"row\">\n                                <div className=\"col-7\">\n                                    <table className=\"table table-hover\">\n                                        <tr>\n                                            <th>Incident Id</th>\n                                            <td><span className=\"badge badge-primary\">{this.props.issueId}\n                                            </span></td>\n                                        </tr>\n                                        <tr>\n                                            <th>Incident Entity Type</th>\n                                            <td>\n                                                {this.getIconForEntityType(iSummary.entity_type)}\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <th>Incident Entity Id</th>\n                                            <td> {iSummary.entity_id} </td>\n                                        </tr>\n                                        <tr>\n                                            <th>Incident Score</th>\n                                            <td> {iSummary.score} </td>\n                                        </tr>\n                                        <tr>\n                                            <th>Priority</th>\n                                            {this.getIconForPriority(iDetails.priority)}\n                                        </tr>\n                                    </table>\n                                </div>\n                            </div>\n                        )) ||\n                        this.getPlaceHolder()}\n                    </div>\n                )}\n\n                <div className=\"modal fade\" id=\"confirmModal\" tabIndex=\"-1\" role=\"dialog\"\n                     aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                    <div className=\"modal-dialog\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Are you sure?</h5>\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                    <span aria-hidden=\"true\">&times;</span>\n                                </button>\n                            </div>\n                            <div className=\"modal-body\">\n                                {this.state.popupContent}\n                            </div>\n                            <div className=\"modal-footer\">\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\"\n                                        onClick={() => confirmPopup(\"\")}>\n                                    Close\n                                </button>\n                                <button type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\"\n                                        onClick={() => confirmPopup(\"\")}>\n                                    Save changes\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    getPlaceHolder() {\n        return (\n            <div className=\"spinner-grow\" style={{width: \"4rem\", height: \"4rem\"}} role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n            </div>\n        );\n    }\n\n    getIconForPriority(p) {\n        if (p === \"Severe\")\n            return (\n                <td>\n                    <span className=\"text-danger\">\n                        <i className={\"fas mr-1 fa-angle-up\"}/>\n                    </span>\n                    {p}\n                </td>\n            );\n        else if (p === \"Major\")\n            return (\n                <td>\n                    <span className=\"text-danger\">\n                        <i className={\"fas mr-1 fa-angle-up\"}/>\n                    </span>\n                    {p}\n                </td>\n            );\n        else if (p === \"Minor\")\n            return (\n                <td>\n                    <span className=\"text-success\">\n                        <i className={\"fas mr-1 fa-angle-down\"}/>\n                    </span>\n                    {p}\n                </td>\n            );\n    }\n\n    getIconForFraud(_if) {\n        if (_if)\n            return (\n                <td>\n                    <span className=\"text-danger\">\n                        <i className={\"fas mr-1 fa-check\"}/>\n                    </span>\n                    Yes\n                </td>\n            );\n        else\n            return (\n                <td>\n                    <span className=\"text-success\">\n                        <i className={\"fas mr-1 fa-x\"}/>\n                    </span>\n                    No\n                </td>\n            );\n    }\n\n    getIconForEntityType(entity_type) {\n        if (entity_type === \"Account\") {\n            return (\n                <span className=\"badge badge-info\">\n                    <span className=\"mr-1\">\n                        <i className=\"fas fa-folder\"/>\n                    </span>\n                    {entity_type}\n                </span>\n            );\n        } else if (entity_type === \"Customer\") {\n            return (\n                <span className=\"badge badge-info\">\n                    <span className=\"mr-1\">\n                        <i className=\"fas fa-users\"/>\n                    </span>\n                    {entity_type}\n                </span>\n            );\n        } else if (entity_type === \"Employee\") {\n            return (\n                <span className=\"badge badge-info\">\n                    <span className=\"mr-1\">\n                        <i className=\"fas fa-suitcase\"/>\n                    </span>\n                    {entity_type}\n                </span>\n            );\n        } else if (entity_type === \"Branch\") {\n            return (\n                <span className=\"badge badge-info\">\n                    <span className=\"mr-1\">\n                        <i className=\"fas fa-code-branch\"/>\n                    </span>\n                    {entity_type}\n                </span>\n            );\n        }\n    }\n\n}\n","import React, {Component} from \"react\";\nimport {DB} from \"../API\";\nimport CaseDetails from \"./details/CaseDetails\";\n\nexport default class DetailsComponent extends Component {\n    contextRef = React.createRef();\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            showTabs: {\n                activity: true\n            }\n        };\n    }\n\n    componentDidMount() {\n        setTimeout(() => {\n            this.setState({commentDetails: DB.issue_comments[this.props.issueId]});\n        }, 3500);\n    }\n\n    render() {\n        const sT = this.state.showTabs;\n        const commentDetails = this.state.commentDetails;\n        const toggleTabActive = tabName => {\n            let updateST = sT;\n            updateST[tabName] = !updateST[tabName];\n            this.setState({showTabs: updateST});\n        };\n\n        return (\n            <div>\n                <div className=\"container-fluid\">\n                    <nav aria-label=\"breadcrumb\">\n                        <ol className=\"breadcrumb\">\n                            <li className=\"breadcrumb-item\">\n                                <a href=\"#\" onClick={() => this.props.goBack()}>\n                                    {this.props.project}\n                                </a>\n                            </li>\n                            <li className=\"breadcrumb-item\"><a href=\"#\">{this.props.issueId}</a></li>\n                            <li className=\"breadcrumb-item active\" aria-current=\"page\">Incident Details</li>\n                        </ol>\n                    </nav>\n\n                    {/*\n                    <Step.Group>\n                        <Step active>\n                            <Icon name=\"chart line\"/>\n                            <Step.Content>\n                                <Step.Title>Incident Details</Step.Title>\n                                <Step.Description>\n                                    Case details and incident details\n                                </Step.Description>\n                            </Step.Content>\n                        </Step>\n                        <Step>\n                            <Icon name=\"address card\"/>\n                            <Step.Content>\n                                <Step.Title>Evidence Details</Step.Title>\n                                <Step.Description>\n                                    Detailed Evidence for Incident\n                                </Step.Description>\n                            </Step.Content>\n                        </Step>\n                        <Step>\n                            <Icon name=\"sitemap\"/>\n                            <Step.Content>\n                                <Step.Title>Link Analysis</Step.Title>\n                                <Step.Description>Head over for linkage</Step.Description>\n                            </Step.Content>\n                        </Step>\n                    </Step.Group>\n*/}\n\n                    <div className=\"row\">\n                        <div className=\"col-8\">\n                            {/* Big huge Case Details here  */}\n                            <CaseDetails\n                                issueId={this.props.issueId}\n                                issue_summary={this.props.issue_summary}\n                                nm={this.props.nm}\n                            />\n\n                            {/*<div>*/}\n                            {/* Activity menu here  */}\n                            {/*\n                                        <Menu attached=\"top\" tabular style={{marginTop: \"1rem\"}}\n                                              inverted={this.props.nm}>\n                                            <Menu.Item\n                                                name=\"activity\"\n                                                color=\"brown\"\n                                                content={\n                                                    <h5>\n                                                        Activity\n                                                        <Icon\n                                                            name={\n                                                                \"caret \" + (sT[\"activity\"] ? \"down\" : \"right\")\n                                                            }\n                                                        />\n                                                    </h5>\n                                                }\n                                                active={sT[\"activity\"]}\n                                                onClick={() => {\n                                                    toggleTabActive(\"activity\");\n                                                }}\n                                                inverted={this.props.nm}\n                                            />\n                                        </Menu>\n                                        {sT[\"activity\"] && (\n                                            <Segment\n                                                color=\"brown\"\n                                                attached=\"bottom\"\n                                                inverted={this.props.nm}\n                                            >\n                                                {(commentDetails && (\n                                                    <ActivityComponent comments={commentDetails}/>\n                                                )) ||\n                                                this.getPlaceHolder()}\n                                            </Segment>\n                                        )}\n                            </div>\n*/}\n                        </div>\n                        <div className=\"col-4\">\n                            <div className=\"card text-info bg-secondary mb-3\">\n                                <div className=\"card-header\">Pinned Details</div>\n                                <ul className=\"list-group list-group-flush\">\n                                    <li className=\"list-group-item list-group-item-secondary\">\n                                        <dl>\n                                            <dt>Project:</dt>\n                                            <dd>{this.props.project}</dd>\n                                        </dl>\n                                    </li>\n                                    <li className=\"list-group-item list-group-item-secondary\">\n                                        <dl>\n                                            <dt>Score:</dt>\n                                            <dd>200</dd>\n                                        </dl>\n                                    </li>\n                                    <li className=\"list-group-item list-group-item-secondary\">\n                                        <dl>\n                                            <dt>Priority</dt>\n                                            <dd>Severe</dd>\n                                        </dl>\n                                    </li>\n                                </ul>\n                                <div className=\"card-footer\">4 comments</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    getPlaceHolder() {\n        return (\n            <div className=\"spinner-grow\" style={{width: \"4rem\", height: \"4rem\"}} role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n            </div>\n        );\n    }\n}\n","import React, {Component} from \"react\";\nimport {DB} from \"../API\";\nimport {classNames} from \"../App\";\nimport DetailsComponent from \"./DetailsComponent\";\n// import DetailsComponent from \"./DetailsComponent\";\n\nexport default class ListIssues extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            issues: [],\n            all_issues: [],\n            asc_sort_order: true,\n            pageSize: 20,\n            selectedIssue: \"\",\n            lastVisitedIssue: \"\"\n        };\n        this.updatePageNumber = this.updatePageNumber.bind(this);\n        this.selectIssue = this.selectIssue.bind(this);\n    }\n\n    componentDidMount() {\n        this.updateIssuesList();\n    }\n\n    componentWillReceiveProps(updated_props) {\n        if (this.state.projectName !== updated_props.project) {\n            this.setState(\n                {selectedIssue: \"\", projectName: updated_props.project},\n                () => {\n                    this.updateIssuesList();\n                }\n            );\n        }\n    }\n\n    updateIssuesList() {\n        let project_issues = DB.issues[this.props.project];\n        if (project_issues) {\n            this.setState({all_issues: project_issues}, () => {\n                this.updatePageNumber(1);\n            });\n        } else {\n            this.setState({all_issues: []}, () => {\n                this.updatePageNumber(1);\n            });\n        }\n    }\n\n    render() {\n        const so = this.state.asc_sort_order ? \"up \" : \"down \";\n        const totalPages = this.state.all_issues.length / this.state.pageSize;\n        const {activePage, selectedIssue} = this.state;\n        let toggleSort = () => {\n            this.setState({asc_sort_order: !this.state.asc_sort_order});\n        };\n        let paginationNum = [];\n        for (let i = 0; i < totalPages; i++) {\n            paginationNum.push(\n                <li key={i} className={\"page-item \" + (activePage === i + 1 ? \"active\" : \"\")}\n                    onClick={() => this.updatePageNumber(i + 1)}>\n                    <a className=\"page-link\" href=\"#\">{i + 1}</a>\n                </li>);\n        }\n        if (selectedIssue)\n            return (\n                <DetailsComponent\n                    goBack={() => this.selectIssue(\"\")}\n                    issueId={selectedIssue}\n                    project={this.props.project}\n                    issue_summary={this.state.issue_summary}\n                    nm={this.props.nm}\n                />\n            );\n\n        return (\n            <div className=\"container\">\n                <table className=\"table table-hover table-responsive-sm\">\n                    <thead className=\"thead-light\">\n                    <tr>\n                        <th>Incident Id</th>\n                        <th>Entity Type</th>\n                        <th>Entity Id</th>\n                        <th onClick={toggleSort}>\n                            <i className={\"fas mr-1 fa-sort-\" + so}/>\n                            Updated On\n                        </th>\n                        <th>Status</th>\n                        <th>Score</th>\n                        <th>Summary</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {this.state.issues.map(ei => this.getRowFromIssue(ei))}\n                    </tbody>\n                </table>\n                <nav aria-label=\"Page navigation example\">\n                    <ul className=\"pagination justify-content-center\">\n                        <li className={\"page-item\"}\n                            onClick={() => this.updatePageNumber(activePage - 1)}>\n                            <a className={\"page-link \" + (activePage === 1 ? \"disabled\" : \"\")} href=\"#\">Previous</a>\n                        </li>\n                        {paginationNum.map(e => e)}\n                        <li className={\"page-item\"}\n                            onClick={() => this.updatePageNumber(activePage + 1)}>\n                            <a className={\"page-link \" + +(activePage === totalPages ? \"disabled\" : \"\")}\n                               href=\"#\">Next</a>\n                        </li>\n                    </ul>\n                </nav>\n            </div>\n        );\n    }\n\n    selectIssue(issueId, issue_summary = {}) {\n        if (!issueId) this.setState({selectedIssue: issueId, issue_summary: {}});\n        else\n            this.setState({\n                selectedIssue: issueId,\n                issue_summary: issue_summary,\n                lastVisitedIssue: issueId\n            });\n    }\n\n    getRowFromIssue(each_issue) {\n        const displayDate = new Date(\n            parseInt(each_issue[\"updated_on\"])\n        ).toLocaleString(\"en-IN\", {timeZone: \"UTC\"});\n        const is_warning_issue = parseInt(each_issue[\"score\"]) >= 700;\n        const is_last_visited =\n            this.state.lastVisitedIssue === each_issue[\"incident_id\"];\n        const tableClasses = classNames({\n            \"table-active\": is_last_visited, \"disabled\": each_issue.status === \"Closed\",\n            \"table-warning\": is_warning_issue\n        });\n\n        return (\n            <tr key={\"incident_\" + each_issue[\"incident_id\"]}\n                onClick={() => this.selectIssue(each_issue[\"incident_id\"], each_issue)}\n                className={tableClasses}>\n                <td>\n                    <span className=\"badge badge-primary\">\n                        {each_issue[\"incident_id\"]}\n                    </span>\n                </td>\n                <td>\n                    {this.getIconForEntityType(each_issue[\"entity_type\"])}\n                </td>\n                <td>{each_issue[\"entity_id\"]}</td>\n                <td> {displayDate} </td>\n                <td>{each_issue[\"status\"]}</td>\n                <td>\n                    {is_warning_issue && <span className=\"mr-1\"><i className=\"fas fa-exclamation-circle\"/></span>}\n                    {each_issue[\"score\"]}\n                </td>\n                <td>{each_issue[\"summary\"]}</td>\n            </tr>\n        );\n    }\n\n    getIconForEntityType(entity_type) {\n        if (entity_type === \"Account\") {\n            return (\n                <span className=\"badge badge-info\">\n                    <span className=\"mr-1\">\n                        <i className=\"fas fa-folder\"/>\n                    </span>\n                    {entity_type}\n                </span>\n            );\n        } else if (entity_type === \"Customer\") {\n            return (\n                <span className=\"badge badge-info\">\n                    <span className=\"mr-1\">\n                        <i className=\"fas fa-users\"/>\n                    </span>\n                    {entity_type}\n                </span>\n            );\n        } else if (entity_type === \"Employee\") {\n            return (\n                <span className=\"badge badge-info\">\n                    <span className=\"mr-1\">\n                        <i className=\"fas fa-suitcase\"/>\n                    </span>\n                    {entity_type}\n                </span>\n            );\n        } else if (entity_type === \"Branch\") {\n            return (\n                <span className=\"badge badge-info\">\n                    <span className=\"mr-1\">\n                        <i className=\"fas fa-code-branch\"/>\n                    </span>\n                    {entity_type}\n                </span>\n            );\n        }\n    }\n\n    updatePageNumber(activePage) {\n        const totalPages = this.state.all_issues.length / this.state.pageSize;\n        if (activePage <= 0 || activePage >= totalPages + 1 || activePage === this.state.activePage)\n            return;\n        let pg = this.state.pageSize;\n        let slice = this.state.all_issues.slice(\n            pg * (activePage - 1),\n            pg * activePage\n        );\n        this.setState({activePage: activePage, issues: slice});\n    }\n\n\n}\n","import React, {Component} from \"react\";\nimport \"./styles.css\";\nimport GenesisComponent from \"./icms/GenesisComponent\";\n\nexport default class App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            visible: true,\n            showICMS: false\n        };\n        this.openICMS = this.openICMS.bind(this);\n    }\n\n    openICMS() {\n        this.setState({showICMS: true});\n    }\n\n    render() {\n        if (this.state.showICMS) {\n            return <GenesisComponent/>;\n        }\n\n        return (\n            <div className=\"App align-content-center\">\n                <h1>ICMS</h1>\n                <h2>Code Name: Lithium</h2>\n                <h3>Let's see what this CSS framework has for you</h3>\n                <button onClick={this.openICMS} className=\"btn btn-outline-light\">Open ICMS</button>\n            </div>\n        );\n    }\n}\n\nexport function classNames(classes) {\n    return Object.entries(classes)\n        .filter(([key, value]) => value)\n        .map(([key, value]) => key)\n        .join(' ');\n}\n","import React, {Component} from \"react\";\nimport {DB} from \"../API\";\n// import ListIssues from \"./ListIssues\";\nimport HeaderComponent from \"./HeaderComponent\";\nimport ListIssues from \"./ListIssues\";\n\nexport default class GenesisComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            project: \"\",\n            projectList: [],\n            nm: false\n        };\n    }\n\n    componentDidMount() {\n        setTimeout(() => {\n            let projects = DB.projects;\n            if (projects)\n                this.setState({projectList: projects, project: projects[0]});\n        }, 1000);\n    }\n\n    render() {\n        const setProject = p => {\n            if (p) this.setState({project: p, visible: false});\n            else this.setState({visible: false});\n        };\n        const {projectList, project} = this.state;\n\n        return (\n            <div style={{marginTop: \"90px\"}}>\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col-2\">\n                            <h6 className=\"justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\">\n                                Projects\n                            </h6>\n                            {projectList.length === 0 && (\n                                <div className=\"spinner-border mx-5 mt-4 mb-1\" role=\"status\">\n                                    <span className=\"sr-only\">Loading...</span>\n                                </div>\n                            )}\n                            <div className=\"list-group\">\n                                {projectList.length !== 0 && projectList.map(p =>\n                                    <a onClick={() => setProject(p)}\n                                       className={\"list-group-item list-group-item-action \" + (p === project ? \"active\" : \"\")}>\n                                        {p}\n                                    </a>\n                                )}\n                            </div>\n                        </div>\n                        <div className=\"col-10\">\n                            {(project\n                                && <ListIssues project={project}/>)\n                            ||\n                            <div className=\"spinner-border mx-5 mt-4 mb-1\" role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </div>\n                            }\n                        </div>\n                    </div>\n                </div>\n                <HeaderComponent night={_nm => this.setState({nm: _nm})}/>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n\nimport App from \"./App\";\n\n// TODO: Switch to https://github.com/palmerhq/the-platform#stylesheet when it will be stable\nfor (let scriptUrl of [\"https://code.jquery.com/jquery-3.5.1.slim.min.js\",\n    \"https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js\",\n    \"https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js\"]) {\n    const scriptEle = document.createElement(\"script\");\n    scriptEle.src = scriptUrl;\n    document.head.appendChild(scriptEle);\n}\nconst fontAwesomeDep = document.createElement(\"link\");\nfontAwesomeDep.rel = \"stylesheet\";\nfontAwesomeDep.href = \"https://use.fontawesome.com/releases/v5.0.2/css/all.css\";\ndocument.head.appendChild(fontAwesomeDep);\n\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    rootElement\n);\n"],"sourceRoot":""}